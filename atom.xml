<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>斑斓的梦</title>
  <subtitle>Zhen&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://pzhen.github.io/"/>
  <updated>2017-08-08T06:32:04.000Z</updated>
  <id>http://pzhen.github.io/</id>
  
  <author>
    <name>P.Zhen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Es – 权威指南PDF版</title>
    <link href="http://pzhen.github.io/2017/08/07/Elasticsearch-%E2%80%93-%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97PDF%E7%89%88/"/>
    <id>http://pzhen.github.io/2017/08/07/Elasticsearch-–-权威指南PDF版/</id>
    <published>2017-08-07T09:36:44.000Z</published>
    <updated>2017-08-08T06:32:04.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/WX20170808-1423272x.png" alt=""></p>
<a id="more"></a>


	<div class="row">
    <embed src="Elasticsearch权威指南-中文.pdf" width="100%" height="850" type="application/pdf">
	</div>


]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/WX20170808-1423272x.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://pzhen.github.io/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://pzhen.github.io/tags/Elasticsearch/"/>
    
      <category term="Es" scheme="http://pzhen.github.io/tags/Es/"/>
    
      <category term="PDF" scheme="http://pzhen.github.io/tags/PDF/"/>
    
  </entry>
  
  <entry>
    <title>Shell – 脚本攻略PDF</title>
    <link href="http://pzhen.github.io/2017/08/07/Shell-%E2%80%93-%E8%84%9A%E6%9C%AC%E6%94%BB%E7%95%A5PDF/"/>
    <id>http://pzhen.github.io/2017/08/07/Shell-–-脚本攻略PDF/</id>
    <published>2017-08-07T09:13:00.000Z</published>
    <updated>2017-08-08T06:06:13.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>


	<div class="row">
    <embed src="Linux-Shell-脚本攻略.pdf" width="100%" height="850" type="application/pdf">
	</div>



]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;


	&lt;div class=&quot;row&quot;&gt;
    &lt;embed src=&quot;Linux-Shell-脚本攻略.pdf&quot; width=&quot;100%&quot; height=&quot;850&quot; type=&quot;application/pdf&quot;&gt;
	&lt;/div&gt;




    
    </summary>
    
      <category term="Linux" scheme="http://pzhen.github.io/categories/Linux/"/>
    
      <category term="Shell" scheme="http://pzhen.github.io/categories/Linux/Shell/"/>
    
    
      <category term="Linux" scheme="http://pzhen.github.io/tags/Linux/"/>
    
      <category term="Shell" scheme="http://pzhen.github.io/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>Movie-《海边的曼彻斯特》</title>
    <link href="http://pzhen.github.io/2017/08/07/Movie-%E3%80%8A%E6%B5%B7%E8%BE%B9%E7%9A%84%E6%9B%BC%E5%BD%BB%E6%96%AF%E7%89%B9%E3%80%8B/"/>
    <id>http://pzhen.github.io/2017/08/07/Movie-《海边的曼彻斯特》/</id>
    <published>2017-08-07T05:58:54.000Z</published>
    <updated>2017-08-07T06:10:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>我们都有权利，不跟自己的伤痛和解。</p>
<p>你是否也有过低潮，有过失败，觉得这世界总是有许多不如意，可能是亲人的离世，可能是失业，可能是失恋。</p>
<p>有人会灌我们一碗鸡汤，跟我们说，只要努力，人生就可以再有一次机会。但是，如果没有呢？</p>
<h3 id="《海边的曼彻斯特》"><a href="#《海边的曼彻斯特》" class="headerlink" title="《海边的曼彻斯特》"></a>《海边的曼彻斯特》</h3><p><img src="timg-2.jpeg" alt="海边的曼彻斯特"></p>
<p>叙述一个颓废压抑的修理工，叫做李，在得知哥哥乔伊去世之后，他回到曼彻斯特老家帮忙处理哥哥的后事，因此要照顾侄子帕特里克，甚至成为对方的监护人。</p>
<p>李曾经拥有过幸福，但那也只是曾经。李原本是个风趣幽默的男人，闲暇无事就常常找几个好友来家里喝酒，也常常陪家人玩乐，他拥有非常幸福的人生。</p>
<p>直到那一天的到来。</p>
<p>李因为喝醉酒，不小心酿成了意外，让他挚爱的3个小孩都葬身火海。他的妻子活了下来，一辈子恨他。李成为整个小镇居民口中的罪人，每个人都讨厌他，连他自己也恨透了他自己，但可怜的是，他只是忘了关掉火炉，他无法被定罪，最后无罪开释。</p>
<p>连赎罪的机会都没有，因此，他只想死。</p>
<p>就这样荒废度日之后，李孤独的活在另一座城市，直到哥哥的过世，才让他再度面对一切。</p>
<p>回到曼彻斯特，所有人都用异样眼光看他，他也不愿意回来，但为了照顾侄子，他没办法。但是这个侄子帕特里克，却也是个大麻烦。</p>
<p>帕特里克虽然才刚丧父，但看起来完全不悲伤，还同时交了两个女朋友，镇日玩乐团，也完全不想跟他的叔叔李有所接触。</p>
<p>男人与男孩，两人就这样硬要被凑在一起生活。而且这个男孩还会让李想起他那痛苦的过往。</p>
<p>自从失去最爱的孩子们之后，李变得愤世嫉俗，不愿交任何朋友，在酒吧里只要跟人一言不合，就会大打出手。</p>
<p>李遇到主动示好的女人，也不想要多做搭讪，只因为他知道自己是个天煞孤星。</p>
<p>李认为自己不可以拥有幸福，因为他犯过错。</p>
<p>但他却在活泼的帕特里克上看到自己，帕特里克爱闹别扭，看似相当成熟，但内心里却很孤独寂寞。</p>
<p>有一段戏，当帕特里克打开冰箱时，却不由自主痛哭，只因为他想起那躺在冰柜里面的爸爸，原本武装好的情绪，一瞬间全部溃堤。</p>
<p>有的时候，悲伤就是这样。明明只是丢失了某种物品，只是一个不小心碰撞的小动作，就让你回忆起最悲伤的故事，你会开始痛哭，旁人都纳闷，但这种感觉只有你自己最了解。</p>
<p>李并不打算要帮帕特里克走出悲伤，因为他自己也走不出来，他所能做的，只有陪伴。李自己也只是需要一个拥抱，没有人可以给他，但他愿意给他的侄子。</p>
<p>虽然他还是过得很痛苦，在街上还偶遇他的前妻，提醒他人生有多么悲惨。</p>
<p>是啊，我很痛苦，但不需要你提醒。可是只要看到你，我所有的坚强，都完全没有用。</p>
<p>李走出了孤独的心灵，他知道很多时候，痛苦不会一瞬间结束，但会慢慢改变一些什么的。</p>
<p>从结尾的最后一幕，我们似乎看到了李的嘴角有微微抽动，他还不懂得如何微笑，不过他总有一天会知道。</p>
<blockquote>
<p>你们都朝春天去，就留我一人在破碎里又丧又美丽。</p>
</blockquote>
<p><img src="60a371f8b0e93bd11e6f701cd8afce48.jpg" alt="海边的曼彻斯特"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们都有权利，不跟自己的伤痛和解。&lt;/p&gt;
&lt;p&gt;你是否也有过低潮，有过失败，觉得这世界总是有许多不如意，可能是亲人的离世，可能是失业，可能是失恋。&lt;/p&gt;
&lt;p&gt;有人会灌我们一碗鸡汤，跟我们说，只要努力，人生就可以再有一次机会。但是，如果没有呢？&lt;/p&gt;
&lt;h3 id=&quot;
    
    </summary>
    
      <category term="Movie" scheme="http://pzhen.github.io/categories/Movie/"/>
    
    
      <category term="Movie" scheme="http://pzhen.github.io/tags/Movie/"/>
    
      <category term="《海边的曼彻斯特》" scheme="http://pzhen.github.io/tags/%E3%80%8A%E6%B5%B7%E8%BE%B9%E7%9A%84%E6%9B%BC%E5%BD%BB%E6%96%AF%E7%89%B9%E3%80%8B/"/>
    
  </entry>
  
  <entry>
    <title>CentOS-LAMP搭建</title>
    <link href="http://pzhen.github.io/2017/08/07/CentOS-LAMP%E6%90%AD%E5%BB%BA/"/>
    <id>http://pzhen.github.io/2017/08/07/CentOS-LAMP搭建/</id>
    <published>2017-08-07T02:48:35.000Z</published>
    <updated>2017-08-07T02:49:45.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="centos-6-4-yum搭建lamp环境"><a href="#centos-6-4-yum搭建lamp环境" class="headerlink" title="centos 6.4 yum搭建lamp环境"></a>centos 6.4 yum搭建lamp环境</h3><p>1、配置防火墙，开启80端口、3306端口</p>
<p>vi /etc/sysconfig/iptables</p>
<p>-A INPUT -m state –state NEW -m tcp -p tcp –dport 80 -j ACCEPT #允许80端口通过防火墙</p>
<p>-A INPUT -m state –state NEW -m tcp -p tcp –dport 3306 -j ACCEPT #允许3306端口通过防火墙</p>
<p>备注：很多网友把这两条规则添加到防火墙配置的最后一行，导致防火墙启动失败，</p>
<p>正确的应该是添加到默认的22端口这条规则的下面</p>
<p>如下所示：</p>
<p>############################## 添加好之后防火墙规则如下所示 ##############################</p>
<p>Firewall configuration written by system-config-firewall</p>
<p>Manual customization of this file is not recommended.</p>
<p>*filter</p>
<p>:INPUT ACCEPT [0:0]</p>
<p>:FORWARD ACCEPT [0:0]</p>
<p>:OUTPUT ACCEPT [0:0]</p>
<p>-A INPUT -m state –state ESTABLISHED,RELATED -j ACCEPT</p>
<p>-A INPUT -p icmp -j ACCEPT</p>
<p>-A INPUT -i lo -j ACCEPT</p>
<p>-A INPUT -m state –state NEW -m tcp -p tcp –dport 22 -j ACCEPT</p>
<p>-A INPUT -m state –state NEW -m tcp -p tcp –dport 80 -j ACCEPT</p>
<p>-A INPUT -m state –state NEW -m tcp -p tcp –dport 3306 -j ACCEPT</p>
<p>-A INPUT -j REJECT –reject-with icmp-host-prohibited</p>
<p>-A FORWARD -j REJECT –reject-with icmp-host-prohibited</p>
<p>COMMIT</p>
<p>###################################################################################</p>
<p>/etc/init.d/iptables restart #最后重启防火墙使配置生效</p>
<p>2、关闭SELINUX</p>
<p>vi /etc/selinux/config</p>
<p>#SELINUX=enforcing #注释掉</p>
<p>#SELINUXTYPE=targeted #注释掉</p>
<p>SELINUX=disabled #增加</p>
<p>:wq #保存，关闭</p>
<p>shutdown -r now #重启系统</p>
<p>安装篇：</p>
<p>一、安装Apache</p>
<p>yum install httpd #根据提示，输入Y安装即可成功安装</p>
<p>/etc/init.d/httpd start #启动Apache</p>
<p>备注：Apache启动之后会提示错误：</p>
<p>正在启动 httpd:httpd: Could not reliably determine the server’s fully qualif domain name, using ::1 for ServerName</p>
<p>解决办法：</p>
<p>vi /etc/httpd/conf/httpd.conf #编辑</p>
<p>找到 #ServerName www.example.com:80</p>
<p>修改为 ServerName www.osyunwei.com:80 #这里设置为你自己的域名，如果没有域名，可以设置为localhost:wq! #保存退出</p>
<p>chkconfig httpd on #设为开机启动</p>
<p>/etc/init.d/httpd restart #重启Apache</p>
<p>二、安装MySQL</p>
<p>1、安装MySQL</p>
<p>yum install mysql mysql-server #询问是否要安装，输入Y即可自动安装,直到安装完成</p>
<p>/etc/init.d/mysqld start #启动MySQL</p>
<p>chkconfig mysqld on #设为开机启动</p>
<p>cp /usr/share/mysql/my-medium.cnf /etc/my.cnf #拷贝配置文件（注意：如果/etc目录下面默认有一个my.cnf，直接覆盖即可）</p>
<p>2、为root账户设置密码</p>
<p>mysql_secure_installation</p>
<p>回车，根据提示输入Y</p>
<p>输入2次密码，回车</p>
<p>根据提示一路输入Y</p>
<p>最后出现：Thanks for using MySQL!</p>
<p>MySql密码设置完成，重新启动 MySQL：</p>
<p>/etc/init.d/mysqld restart #重启</p>
<p>/etc/init.d/mysqld stop #停止</p>
<p>/etc/init.d/mysqld start #启动</p>
<p>允许远程登录</p>
<p>mysql -u root -p</p>
<p>Enter Password: <your new="" password=""></your></p>
<p>mysql&gt;GRANT ALL PRIVILEGES ON . TO ‘用户名’@’%’ IDENTIFIED BY ‘密码’ WITH GRANT OPTION;</p>
<p>完成后就能用mysql-front远程管理mysql了</p>
<p>详细出处参考：<a href="http://www.jb51.net/article/24775.htm" target="_blank" rel="external">http://www.jb51.net/article/24775.htm</a></p>
<p>解决 Access denied for user ‘’@’localhost’ to database ‘mysql’ 今天给服务器更新mysql，用源代码编译安装，在导入数据后发现没有将mysql加入系统服务，于是加上服务。加上之后在登录，结果不用密码就能登进去，而root明明是有密码的。用select user()命令查看当前登录用户是root。</p>
<p>查看数据库，只能看到自带的两个，mysql这个数据库都看不到。如果运行use mysql，就会出现 Access denied for user ‘’@’localhost’ to database ‘mysql’， 这说明这是匿名登录的，几乎什么权限都没有。即使用mysql -u root登录也是这个样子，不知道是不是一个bug。</p>
<p>在 网上查了半天，找到了解决办法。首先停止mysqld服务，然后后台运行mysqld_safe –skip-grant-tables &amp;, 再用root登录，就一切正常了。网上说只要改了root密码就好了，我的却不行。干脆把user表里的匿名用户删了，反正也不用匿名登录。然后在登录就 好了</p>
<p>三、安装PHP5</p>
<p>1、安装PHP5</p>
<p>yum install php</p>
<p>根据提示输入Y直到安装完成</p>
<p>2、安装PHP组件，使 PHP5 支持 MySQL</p>
<p>yum install php-mysql php-gd libjpeg* php-imap php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-mcrypt php-bcmath php-mhash libmcrypt</p>
<p>这里选择以上安装包进行安装</p>
<p>根据提示输入Y回车</p>
<p>/etc/init.d/mysqld restart #重启MySql</p>
<p>/etc/init.d/httpd restart #重启Apche</p>
<p>配置篇</p>
<p>一、Apache配置</p>
<p>vi /etc/httpd/conf/httpd.conf #编辑文件</p>
<p>ServerTokens OS　 在44行 修改为：ServerTokens Prod （在出现错误页的时候不显示服务器操作系统的名称）</p>
<p>ServerSignature On　 在536行 修改为：ServerSignature Off （在错误页中不显示Apache的版本）</p>
<p>Options Indexes FollowSymLinks　 在331行 修改为：Options Includes ExecCGI FollowSymLinks（允许服务器执行CGI及SSI，禁止列出目录）</p>
<p>#AddHandler cgi-script .cgi　在796行 修改为：AddHandler cgi-script .cgi .pl （允许扩展名为.pl的CGI脚本运行）</p>
<p>AllowOverride None　 在338行 修改为：AllowOverride All （允许.htaccess）</p>
<p>AddDefaultCharset UTF-8　在759行 修改为：AddDefaultCharset GB2312　（添加GB2312为默认编码）</p>
<p>Options Indexes MultiViews FollowSymLinks 在554行 修改为 Options MultiViews FollowSymLinks（不在浏览器上显示树状目录结构）</p>
<p>DirectoryIndex index.html index.html.var 在402行 修改为：DirectoryIndex index.html index.htm Default.html Default.htm</p>
<p>index.php Default.php index.html.var （设置默认首页文件，增加index.php）</p>
<p>KeepAlive Off 在76行 修改为：KeepAlive On （允许程序性联机）</p>
<p>MaxKeepAliveRequests 100 在83行 修改为：MaxKeepAliveRequests 1000 （增加同时连接数）</p>
<p>:wq! #保存退出</p>
<p>/etc/init.d/httpd restart #重启</p>
<p>rm -f /etc/httpd/conf.d/welcome.conf /var/www/error/noindex.html #删除默认测试页</p>
<p>二、php配置</p>
<p>vi /etc/php.ini #编辑</p>
<p>date.timezone = PRC #在946行 把前面的分号去掉，改为date.timezone = PRC</p>
<p>disable_functions = passthru,exec,system,chroot,scandir,chgrp,chown,shell_exec,proc_open,proc_get_status,ini_alter,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server,escapeshellcmd,dll,popen,disk_free_space,checkdnsrr,checkdnsrr,getservbyname,getservbyport,disk_total_space,posix_ctermid,posix_get_last_error,posix_getcwd, posix_getegid,posix_geteuid,posix_getgid, posix_getgrgid,posix_getgrnam,posix_getgroups,posix_getlogin,posix_getpgid,posix_getpgrp,posix_getpid, posix_getppid,posix_getpwnam,posix_getpwuid, posix_getrlimit, posix_getsid,posix_getuid,posix_isatty, posix_kill,posix_mkfifo,posix_setegid,posix_seteuid,posix_setgid, posix_setpgid,posix_setsid,posix_setuid,posix_strerror,posix_times,posix_ttyname,posix_uname</p>
<p>#在386行 列出PHP可以禁用的函数，如果某些程序需要用到这个函数，可以删除，取消禁用。</p>
<p>expose_php = Off #在432行 禁止显示php版本的信息</p>
<p>magic_quotes_gpc = On #在745行 打开magic_quotes_gpc来防止SQL注入</p>
<p>short_open_tag = ON #在229行支持php短标签</p>
<p>open_basedir = .:/tmp/ #在380行 设置表示允许访问当前目录(即PHP脚本文件所在之目录)和/tmp/目录,可以防止php木马跨站,如果改了之后安装程序有问题(例如：织梦内容管理系 统)，可以注销此行，或者直接写上程序的目录/data/www.osyunwei.com/:/tmp/</p>
<p>:wq! #保存退出</p>
<p>/etc/init.d/mysqld restart #重启MySql</p>
<p>/etc/init.d/httpd restart #重启Apche</p>
<p>测试篇</p>
<p>cd /var/www/html</p>
<p>vi index.php #输入下面内容</p>
<p>&lt;?php</p>
<p>phpinfo();</p>
<p>?&gt;</p>
<p>:wq! #保存退出</p>
<p>详细出处参考：<a href="http://www.jb51.net/article/37987.htm" target="_blank" rel="external">http://www.jb51.net/article/37987.htm</a></p>
<p>安装Apahce, PHP, MySQL以及php连接mysql库组件。 #yum -y install httpd php mysql mysql-server php-mysql yum会到指定的服务器(mirror:163.com服务器)下载对应的软件版本，并自动处理依赖关系，并进行安装。</p>
<p>安装apache扩展 #yum -y install httpd-manual mod_ssl mod_perl mod_auth_mysql 让apache更好的支持其他的软件。</p>
<p>安装php的扩展 #yum -y install php-gd php-xml php-mbstring php-ldap php-pear php-xmlrpc apache本身并不支持php文件，要安装对应的php软件，然后进行http.conf配置；让apache能解析.php文件。</p>
<p>安装MySQL的扩展 #yum -y install mysql-connector-odbc mysql-devel libdbi-dbd-mysql 跟好的实现mysql的功能。</p>
<p>配置开机启动服务 #/sbin/chkconfig httpd on [设置apache服务器httpd服务开机启动] #/sbin/service httpd start [启动httpd服务,与开机启动无关] #/sbin/service mysqld start [启动mysqld服务,与开机启动无关]</p>
<p>简单配置文件： apache的配置文件是/etc/httpd/conf下 modules放在/usr/lib/httpd下 php的配置文件在/etc/php.d/下 和/etc/php.ini php的modules放在/usr/lib/php/modules下</p>
<p>安装Tomcat5 #yum -y install tomcat5 tomcat5-webapps tomcat5-admin-webapps 安装Tomcat5安装包和对应的依赖关系包</p>
<p>启动Tomcat5 #service tomcat5 start #chkconfig tomcat5 on</p>
<p>在浏览器输入<a href="http://你的IP:8080/,可以看到Apache" target="_blank" rel="external">http://你的IP:8080/,可以看到Apache</a> SoftWare Foundation页，如果看不到，请确认是否是防火墙问题 看到一个猫头 ——————&gt;tomcat5安装成功</p>
<p>Apache与Tomcat整合 如果网站需同时整合Apache与Tomcat可以使用JK或者Proxy方式 使用VI编辑proxy_ajp.conf文件 #vi /etc/httpd/conf.d/proxy_ajp.conf 输入以下内容 ProxyPass /tomcat/ ajp://localhost:8009/ 存储文件后，重启Apache</p>
<p>#service httpd restart</p>
<p>在浏览器输入<a href="http://你的IP/tomcat/,可以看到Apache" target="_blank" rel="external">http://你的IP/tomcat/,可以看到Apache</a> SoftWare Foundation页 As you may have guessed by now, this is the default Tomcat home page. It can be found on the local filesystem at:</p>
<p>$CATALINA_HOME/webapps/ROOT/index.jsp</p>
<p>这样就可以解析 .jsp文件。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;centos-6-4-yum搭建lamp环境&quot;&gt;&lt;a href=&quot;#centos-6-4-yum搭建lamp环境&quot; class=&quot;headerlink&quot; title=&quot;centos 6.4 yum搭建lamp环境&quot;&gt;&lt;/a&gt;centos 6.4 yum搭建lamp
    
    </summary>
    
      <category term="Linux" scheme="http://pzhen.github.io/categories/Linux/"/>
    
      <category term="LAMP" scheme="http://pzhen.github.io/categories/Linux/LAMP/"/>
    
    
      <category term="Php" scheme="http://pzhen.github.io/tags/Php/"/>
    
      <category term="LAMP" scheme="http://pzhen.github.io/tags/LAMP/"/>
    
      <category term="CentOS" scheme="http://pzhen.github.io/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>CentOS-解压缩打包命令</title>
    <link href="http://pzhen.github.io/2017/08/07/CentOS-%E8%A7%A3%E5%8E%8B%E7%BC%A9%E6%89%93%E5%8C%85%E5%91%BD%E4%BB%A4/"/>
    <id>http://pzhen.github.io/2017/08/07/CentOS-解压缩打包命令/</id>
    <published>2017-08-07T02:44:28.000Z</published>
    <updated>2017-08-07T02:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="tar"><a href="#tar" class="headerlink" title=".tar"></a>.tar</h4><p>　　解包：tar xvf FileName.tar<br>　　打包：tar cvf FileName.tar DirName<br>　　（注：tar是打包，不是压缩！）<br>　　———————————————</p>
<h4 id="gz"><a href="#gz" class="headerlink" title=".gz"></a>.gz</h4><p>　　解压1：gunzip FileName.gz<br>　　解压2：gzip -d FileName.gz<br>　　压缩：gzip FileName<br>　　.tar.gz 和 .tgz<br>　　解压：tar zxvf FileName.tar.gz<br>　　压缩：tar zcvf FileName.tar.gz DirName<br>　　———————————————</p>
<h4 id="bz2"><a href="#bz2" class="headerlink" title=".bz2"></a>.bz2</h4><p>　　解压1：bzip2 -d FileName.bz2<br>　　解压2：bunzip2 FileName.bz2<br>　　压缩： bzip2 -z FileName<br>　　.tar.bz2<br>　　解压：tar jxvf FileName.tar.bz2 或tar –bzip xvf FileName.tar.bz2<br>　　压缩：tar jcvf FileName.tar.bz2 DirName<br>　　———————————————</p>
<h4 id="bz"><a href="#bz" class="headerlink" title=".bz"></a>.bz</h4><p>　　解压1：bzip2 -d FileName.bz<br>　　解压2：bunzip2 FileName.bz<br>　　压缩：未知<br>　　.tar.bz<br>　　解压：tar jxvf FileName.tar.bz<br>　　压缩：未知<br>　　———————————————</p>
<h4 id="Z"><a href="#Z" class="headerlink" title=".Z"></a>.Z</h4><p>　　解压：uncompress FileName.Z<br>　　压缩：compress FileName<br>　　.tar.Z<br>　　解压：tar Zxvf FileName.tar.Z<br>　　压缩：tar Zcvf FileName.tar.Z DirName<br>　　———————————————</p>
<h4 id="zip"><a href="#zip" class="headerlink" title=".zip"></a>.zip</h4><p>　　解压：unzip FileName.zip<br>　　压缩：zip FileName.zip DirName<br>　　压缩一个目录使用 -r 参数，-r 递归。例： $ zip -r FileName.zip DirName<br>　　———————————————</p>
<h4 id="rar"><a href="#rar" class="headerlink" title=".rar"></a>.rar</h4><p>　　解压：rar x FileName.rar<br>　　压缩：rar a FileName.rar DirName<br>　　rar请到：<a href="http://www.rarsoft.com/download.htm" target="_blank" rel="external">http://www.rarsoft.com/download.htm</a> 下载！<br>　　解压后请将rar_static拷贝到/usr/bin目录（其他由$PATH环境变量指定的目录也可以）：</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;tar&quot;&gt;&lt;a href=&quot;#tar&quot; class=&quot;headerlink&quot; title=&quot;.tar&quot;&gt;&lt;/a&gt;.tar&lt;/h4&gt;&lt;p&gt;　　解包：tar xvf FileName.tar&lt;br&gt;　　打包：tar cvf FileName.tar DirName&lt;b
    
    </summary>
    
      <category term="Linux" scheme="http://pzhen.github.io/categories/Linux/"/>
    
      <category term="Rar" scheme="http://pzhen.github.io/categories/Linux/Rar/"/>
    
    
      <category term="CentOS" scheme="http://pzhen.github.io/tags/CentOS/"/>
    
      <category term="Rar" scheme="http://pzhen.github.io/tags/Rar/"/>
    
      <category term="Linux" scheme="http://pzhen.github.io/tags/Linux/"/>
    
      <category term="打包" scheme="http://pzhen.github.io/tags/%E6%89%93%E5%8C%85/"/>
    
      <category term="解压" scheme="http://pzhen.github.io/tags/%E8%A7%A3%E5%8E%8B/"/>
    
  </entry>
  
  <entry>
    <title>Mysql-远程连接</title>
    <link href="http://pzhen.github.io/2017/08/07/Mysql-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/"/>
    <id>http://pzhen.github.io/2017/08/07/Mysql-远程连接/</id>
    <published>2017-08-07T02:39:12.000Z</published>
    <updated>2017-08-07T02:40:42.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>允许ubuntu下mysql远程连接            
</code></pre><p>mysqlubuntu远程连接数据库vim</p>
<h4 id="第一步："><a href="#第一步：" class="headerlink" title="第一步："></a>第一步：</h4><p>vim /etc/mysql/my.cnf找到bind-address = 127.0.0.1<br>注释掉这行，如：#bind-address = 127.0.0.1<br>或者改为： bind-address = 0.0.0.0<br>允许任意IP访问；<br>或者自己指定一个IP地址。<br>重启 MySQL：sudo /etc/init.d/mysql restart</p>
<h4 id="第二步："><a href="#第二步：" class="headerlink" title="第二步："></a>第二步：</h4><p>授权用户能进行远程连接<br>grant all privileges on <em>.</em> to root@”%” identified by “password” with grant option;<br>flush privileges;<br>第一行命令解释如下，<em>.</em>：第一个<em>代表数据库名；第二个</em>代表表名。这里的意思是所有数据库里的所有表都授权给用户。root：授予root账号。 “%”：表示授权的用户IP可以指定，这里代表任意的IP地址都能访问MySQL数据库。“password”：分配账号对应的密码，这里密码自己替换成 你的mysql root帐号密码。<br>第二行命令是刷新权限信息，也即是让我们所作的设置马上生效。</p>
]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;允许ubuntu下mysql远程连接            
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;mysqlubuntu远程连接数据库vim&lt;/p&gt;
&lt;h4 id=&quot;第一步：&quot;&gt;&lt;a href=&quot;#第一步：&quot; class=&quot;headerlink&quot; title=&quot;
    
    </summary>
    
      <category term="Mysql" scheme="http://pzhen.github.io/categories/Mysql/"/>
    
    
      <category term="Mysql" scheme="http://pzhen.github.io/tags/Mysql/"/>
    
      <category term="远程连接" scheme="http://pzhen.github.io/tags/%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>CentOS-安装RAR</title>
    <link href="http://pzhen.github.io/2017/08/07/CentOS-%E5%AE%89%E8%A3%85RAR/"/>
    <id>http://pzhen.github.io/2017/08/07/CentOS-安装RAR/</id>
    <published>2017-08-07T02:25:29.000Z</published>
    <updated>2017-08-07T02:46:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>软件主页</p>
<p><a href="http://www.rarlab.com/" target="_blank" rel="external">http://www.rarlab.com/</a></p>
<p>选择你的安装版本</p>
<p>wget <a href="http://www.rarlab.com/rar/rarlinux-x64-4.2.0.tar.gz" target="_blank" rel="external">http://www.rarlab.com/rar/rarlinux-x64-4.2.0.tar.gz</a></p>
<p>进入目录</p>
<p>make （不需要install）</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;软件主页&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.rarlab.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.rarlab.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;选择你的安装版本&lt;/p&gt;
&lt;p&gt;wget &lt;a hre
    
    </summary>
    
      <category term="Linux" scheme="http://pzhen.github.io/categories/Linux/"/>
    
      <category term="Rar" scheme="http://pzhen.github.io/categories/Linux/Rar/"/>
    
    
      <category term="CentOS" scheme="http://pzhen.github.io/tags/CentOS/"/>
    
      <category term="Rar" scheme="http://pzhen.github.io/tags/Rar/"/>
    
      <category term="Linux" scheme="http://pzhen.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Shell – Tail读取中间行</title>
    <link href="http://pzhen.github.io/2017/08/03/Shell-%E2%80%93-Tail%E8%AF%BB%E5%8F%96%E4%B8%AD%E9%97%B4%E8%A1%8C/"/>
    <id>http://pzhen.github.io/2017/08/03/Shell-–-Tail读取中间行/</id>
    <published>2017-08-03T07:43:26.000Z</published>
    <updated>2017-08-03T07:46:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>linux 如何显示一个文件的某几行(中间几行)<a id="more"></a></p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span>从第3000行开始，显示1000行。即显示3000~3999行</div><div class="line">cat filename | tail -n +3000 | head -n 1000 </div><div class="line"><span class="meta"> </span></div><div class="line"># sed  5-10 行</div><div class="line">sed -n '5,10p' filename</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;linux 如何显示一个文件的某几行(中间几行)
    
    </summary>
    
      <category term="Linux" scheme="http://pzhen.github.io/categories/Linux/"/>
    
      <category term="Shell" scheme="http://pzhen.github.io/categories/Linux/Shell/"/>
    
    
      <category term="Shell" scheme="http://pzhen.github.io/tags/Shell/"/>
    
      <category term="Tail" scheme="http://pzhen.github.io/tags/Tail/"/>
    
  </entry>
  
  <entry>
    <title>Php 一逐行读取文件</title>
    <link href="http://pzhen.github.io/2017/08/03/Php-%E9%80%90%E8%A1%8C%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6/"/>
    <id>http://pzhen.github.io/2017/08/03/Php-逐行读取文件/</id>
    <published>2017-08-03T07:38:04.000Z</published>
    <updated>2017-08-03T07:39:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>PHP逐行读取数据<a id="more"></a></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$file = fopen(<span class="string">"Minot.txt"</span>, <span class="string">"r"</span>) <span class="keyword">or</span> <span class="keyword">exit</span>(<span class="string">"Unable to open file!"</span>);</div><div class="line"><span class="comment">//Output a line of the file until the end is reached</span></div><div class="line"><span class="comment">//feof() check if file read end EOF</span></div><div class="line"><span class="keyword">while</span>(!feof($file))</div><div class="line">&#123;</div><div class="line"> <span class="comment">//fgets() Read row by row</span></div><div class="line"> <span class="keyword">echo</span> fgets($file). <span class="string">"&lt;br /&gt;"</span>;</div><div class="line">&#125;</div><div class="line">fclose($file);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PHP逐行读取数据
    
    </summary>
    
      <category term="Php" scheme="http://pzhen.github.io/categories/Php/"/>
    
    
      <category term="Php" scheme="http://pzhen.github.io/tags/Php/"/>
    
      <category term="读取文件" scheme="http://pzhen.github.io/tags/%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Python 验证日期格式</title>
    <link href="http://pzhen.github.io/2017/08/03/Python-%E9%AA%8C%E8%AF%81%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F/"/>
    <id>http://pzhen.github.io/2017/08/03/Python-验证日期格式/</id>
    <published>2017-08-03T07:18:46.000Z</published>
    <updated>2017-08-03T07:20:55.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">print</span> re.search(<span class="string">r'\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;'</span>, <span class="string">'xxxx1990-12-20xxxx'</span>).group(<span class="number">0</span>)</div><div class="line"><span class="keyword">print</span> re.search(<span class="string">r'\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;T\d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;'</span>, <span class="string">'xxxx2005-06-04T18:37:11xxxx'</span>).group(<span class="number">0</span>)</div><div class="line"><span class="keyword">print</span> re.search(<span class="string">r'\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;T\d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;.\d&#123;3&#125;'</span>, <span class="string">'xxxx2005-06-04T18:37:11.111xxxx'</span>).group(<span class="number">0</span>)</div><div class="line"> </div><div class="line">pattern=re.compile(<span class="string">r'(\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;)((T\d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;|))((.\d&#123;3&#125;)|)'</span>)</div><div class="line"><span class="keyword">print</span> pattern.search(<span class="string">'xxxx2005-06-04T18:37:11.111xxxx'</span>).group(<span class="number">0</span>)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/d
    
    </summary>
    
      <category term="Python" scheme="http://pzhen.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://pzhen.github.io/tags/Python/"/>
    
      <category term="日期格式" scheme="http://pzhen.github.io/tags/%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Python Isinstance</title>
    <link href="http://pzhen.github.io/2017/08/03/Python-Isinstance/"/>
    <id>http://pzhen.github.io/2017/08/03/Python-Isinstance/</id>
    <published>2017-08-03T07:13:50.000Z</published>
    <updated>2017-08-03T07:15:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>在Python中只需要使用内置的函数isinstance，使用起来非常简单<a id="more"></a></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">objA</span>:</span> </div><div class="line"><span class="keyword">pass</span> </div><div class="line"></div><div class="line">A = objA() </div><div class="line">B = <span class="string">'a'</span>,<span class="string">'v'</span> </div><div class="line">C = <span class="string">'a string'</span> </div><div class="line"></div><div class="line"><span class="keyword">print</span> isinstance(A, objA) </div><div class="line"><span class="keyword">print</span> isinstance(B, tuple) </div><div class="line"><span class="keyword">print</span> isinstance(C, basestring)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在Python中只需要使用内置的函数isinstance，使用起来非常简单
    
    </summary>
    
      <category term="Python" scheme="http://pzhen.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://pzhen.github.io/tags/Python/"/>
    
      <category term="Isinstance" scheme="http://pzhen.github.io/tags/Isinstance/"/>
    
  </entry>
  
  <entry>
    <title>Php 一浮点数精确运算</title>
    <link href="http://pzhen.github.io/2017/08/03/Php-%E6%B5%AE%E7%82%B9%E6%95%B0%E7%B2%BE%E7%A1%AE%E8%BF%90%E7%AE%97/"/>
    <id>http://pzhen.github.io/2017/08/03/Php-浮点数精确运算/</id>
    <published>2017-08-03T06:55:40.000Z</published>
    <updated>2017-08-03T07:20:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>如果用php的+-*/计算浮点数的时候，可能会遇到一些计算结果错误的问题，所以基本上大部分语言都提供了精准计算的类库或函数库，比如php有BC高精确度函数库，下面我们介绍一下一些常用的BC高精确度函数使用。<a id="more"></a></p>
<p>bc是Binary Calculator的缩写。bc*函数的参数都是操作数加上一个可选的 [int scale]，比如string bcadd(string $left_operand, string $right_operand[, int $scale])，如果scale没有提供，就用bcscale的缺省值。这里大数直接用一个由0-9组成的string表示，计算结果返回的也是一个 string。<br>bcadd — 将两个高精度数字相加<br>bccomp — 比较两个高精度数字，返回-1, 0, 1<br>bcdiv — 将两个高精度数字相除<br>bcmod — 求高精度数字余数<br>bcmul — 将两个高精度数字相乘<br>bcpow — 求高精度数字乘方<br>bcpowmod — 求高精度数字乘方求模，数论里非常常用<br>bcscale — 配置默认小数点位数，相当于就是Linux bc中的”scale=”<br>bcsqrt — 求高精度数字平方根<br>bcsub — 将两个高精度数字相减</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$a = <span class="number">0.1</span>;</div><div class="line">$b = <span class="number">0.7</span>;</div><div class="line">var_dump(($a + $b) == <span class="number">0.8</span>);</div></pre></td></tr></table></figure>
<p>打印出来的值居然为 boolean false<br>这是为啥?PHP手册对于浮点数有以下警告信息:<br>Warning<br>浮点数精度<br>显然简单的十进制分数如同 0.1 或 0.7 不能在不丢失一点点精度的情况下转换为内部二进制的格式。这就会造成混乱的结果：例如，floor((0.1+0.7)*10) 通常会返回 7 而不是预期中的 8，因为该结果内部的表示其实是类似 7.9999999999…。<br>这和一个事实有关，那就是不可能精确的用有限位数表达某些十进制分数。例如，十进制的 1/3 变成了 0.3333333. . .。<br>所以永远不要相信浮点数结果精确到了最后一位，也永远不要比较两个浮点数是否相等。如果确实需要更高的精度，应该使用任意精度数学函数或者 gmp 函数<br>那么上面的算式我们应该改写为</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$a = <span class="number">0.1</span>;</div><div class="line">$b = <span class="number">0.7</span>;</div><div class="line">var_dump(bcadd($a,$b,<span class="number">2</span>) == <span class="number">0.8</span>);</div></pre></td></tr></table></figure>
<p>这样就能解决浮点数的计算问题了</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果用php的+-*/计算浮点数的时候，可能会遇到一些计算结果错误的问题，所以基本上大部分语言都提供了精准计算的类库或函数库，比如php有BC高精确度函数库，下面我们介绍一下一些常用的BC高精确度函数使用。
    
    </summary>
    
      <category term="Php" scheme="http://pzhen.github.io/categories/Php/"/>
    
    
      <category term="浮点数" scheme="http://pzhen.github.io/tags/%E6%B5%AE%E7%82%B9%E6%95%B0/"/>
    
      <category term="运算" scheme="http://pzhen.github.io/tags/%E8%BF%90%E7%AE%97/"/>
    
      <category term="精度" scheme="http://pzhen.github.io/tags/%E7%B2%BE%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu-LAMP搭建</title>
    <link href="http://pzhen.github.io/2017/08/02/Ubuntu-LAMP%E6%90%AD%E5%BB%BA/"/>
    <id>http://pzhen.github.io/2017/08/02/Ubuntu-LAMP搭建/</id>
    <published>2017-08-02T02:21:39.000Z</published>
    <updated>2017-08-07T02:37:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h3><p>第一步 安装Apache2<br>sudo apt-get install apache2<br>第二步 安装PHP模块<br>sudo apt-get install php5<br>第三步 安装Mysql<br>sudo apt-get install mysql-server<br>sudo apt-get install mysql-client<br>第四步 其他模块安装<a id="more"></a><br>sudo apt-get install libapache2-mod-php5<br>sudo apt-get install libapache2-mod-auth-mysql<br>sudo apt-get install php5-mysql<br>sudo apt-get install php5-gd<br>第五步 测试Apache是否正常工作<br>打开浏览器，输入localhost，看看是否有It Works!网页展示。目录为/var/www<br>第六步 修改权限/var/www<br>sudo chomod 777 /var/www<br>第七步 安装phpmyadmin<br>sudo apt-get install phpmyadmin<br>安装过程中选择apache2，点击确定。下一步选择是要配置数据库，并输入密码。<br>第八步 测试phpmyadmin</p>
<h3 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h3><p>第一步 启用mod_rewrite模块<br>sudo a2enmod rewrite<br>重启Apache服务器：sudo<br>/etc/init.d/apache2<br>restart或者sudo service apache2 restart</p>
<p>第二步 设置Apache支持.htm .html .php<br>第三步 测试php网页<br>编辑mysql_test.php代码如下：<br>&lt;?php<br>$link = mysql_connect(“localhost”, “root”, “password”);<br>if(!$link)<br>die(‘Could not connect: ‘ . mysql_error());<br>else<br>echo “Mysql 配置正确!”;<br>mysql_close($link);<br>?&gt;<br>访问 <a href="http://localhost/mysql_test.php" target="_blank" rel="external">http://localhost/mysql_test.php</a> 显示’Mysql 配置正确‘就代表配置正确。<br>第四步 第三步这里出现了乱码以后解决方法<br>到此为止配置OK。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装过程&quot;&gt;&lt;a href=&quot;#安装过程&quot; class=&quot;headerlink&quot; title=&quot;安装过程&quot;&gt;&lt;/a&gt;安装过程&lt;/h3&gt;&lt;p&gt;第一步 安装Apache2&lt;br&gt;sudo apt-get install apache2&lt;br&gt;第二步 安装PHP模块&lt;br&gt;sudo apt-get install php5&lt;br&gt;第三步 安装Mysql&lt;br&gt;sudo apt-get install mysql-server&lt;br&gt;sudo apt-get install mysql-client&lt;br&gt;第四步 其他模块安装
    
    </summary>
    
      <category term="Linux" scheme="http://pzhen.github.io/categories/Linux/"/>
    
      <category term="LAMP" scheme="http://pzhen.github.io/categories/Linux/LAMP/"/>
    
    
      <category term="Php" scheme="http://pzhen.github.io/tags/Php/"/>
    
      <category term="LAMP" scheme="http://pzhen.github.io/tags/LAMP/"/>
    
      <category term="Ubuntu" scheme="http://pzhen.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Solr-Mmseg4j分词</title>
    <link href="http://pzhen.github.io/2017/08/01/Solr-Mmseg4j%E5%88%86%E8%AF%8D/"/>
    <id>http://pzhen.github.io/2017/08/01/Solr-Mmseg4j分词/</id>
    <published>2017-08-01T07:30:25.000Z</published>
    <updated>2017-08-01T07:31:49.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">fieldtype</span> <span class="attr">name</span>=<span class="string">"textComplex"</span> <span class="attr">class</span>=<span class="string">"solr.TextField"</span> <span class="attr">positionIncrementGap</span>=<span class="string">"100"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">"com.chenlb.mmseg4j.solr.MMSegTokenizerFactory"</span> <span class="attr">mode</span>=<span class="string">"complex"</span> <span class="attr">dicPath</span>=<span class="string">"/Users/zhen/opt/solr-5.5.3/server/solr/comic/conf/dic/"</span> /&gt;</span></div><div class="line">    	<span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"solr.StopFilterFactory"</span> <span class="attr">ignoreCase</span>=<span class="string">"true"</span> <span class="attr">words</span>=<span class="string">"/Users/zhen/opt/solr-5.5.3/server/solr/comic/conf/stopwords.txt"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">fieldtype</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!--</span></div><div class="line">&lt;fieldtype name="textMaxWord" class="solr.TextField" positionIncrementGap="100"&gt;</div><div class="line">    &lt;analyzer&gt;</div><div class="line">        &lt;tokenizer class="com.chenlb.mmseg4j.solr.MMSegTokenizerFactory" mode="max-word" /&gt;</div><div class="line">    &lt;/analyzer&gt;</div><div class="line">&lt;/fieldtype&gt;</div><div class="line">&lt;fieldtype name="textSimple" class="solr.TextField" positionIncrementGap="100"&gt;</div><div class="line">    &lt;analyzer&gt;</div><div class="line">        &lt;tokenizer class="com.chenlb.mmseg4j.solr.MMSegTokenizerFactory" mode="simple" dicPath="n:/custom/path/to/my_dic" /&gt;</div><div class="line">    &lt;/analyzer&gt;</div><div class="line">&lt;/fieldtype&gt;</div><div class="line">--&gt;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;
    
    </summary>
    
      <category term="Solr" scheme="http://pzhen.github.io/categories/Solr/"/>
    
    
      <category term="Solr" scheme="http://pzhen.github.io/tags/Solr/"/>
    
      <category term="Mmseg4j" scheme="http://pzhen.github.io/tags/Mmseg4j/"/>
    
  </entry>
  
  <entry>
    <title>Html-漂亮的后台模板</title>
    <link href="http://pzhen.github.io/2017/08/01/Html-%E6%BC%82%E4%BA%AE%E7%9A%84%E5%90%8E%E5%8F%B0%E6%A8%A1%E6%9D%BF/"/>
    <id>http://pzhen.github.io/2017/08/01/Html-漂亮的后台模板/</id>
    <published>2017-08-01T07:22:17.000Z</published>
    <updated>2017-08-07T03:25:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>分享一个后台模板地址，喜欢的可以自己克隆。</p>
<p><a href="http://envato.stammtec.de/themeforest/melon/pages_user_profile.html" target="_blank" rel="external">http://envato.stammtec.de/themeforest/melon/pages_user_profile.html</a> </p>
<p><a href="envato.stammtec.de.zip">喜欢的点击下载</a></p>
<p>可以去wrapbootstrap.com去找自己喜欢的，将其克隆下来。</p>
<p>wget -m -e robots=off <a href="http://wrapbootstrap.com/preview/WB0B30DGR" target="_blank" rel="external">http://wrapbootstrap.com/preview/WB0B30DGR</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;分享一个后台模板地址，喜欢的可以自己克隆。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://envato.stammtec.de/themeforest/melon/pages_user_profile.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;
    
    </summary>
    
      <category term="Html" scheme="http://pzhen.github.io/categories/Html/"/>
    
    
      <category term="Html" scheme="http://pzhen.github.io/tags/Html/"/>
    
      <category term="Template" scheme="http://pzhen.github.io/tags/Template/"/>
    
  </entry>
  
  <entry>
    <title>Tools-Vmware fusion 8.5 pro 注册码</title>
    <link href="http://pzhen.github.io/2017/08/01/Tools-Vmware-fusion-8-5-pro-%E6%B3%A8%E5%86%8C%E7%A0%81/"/>
    <id>http://pzhen.github.io/2017/08/01/Tools-Vmware-fusion-8-5-pro-注册码/</id>
    <published>2017-08-01T07:19:33.000Z</published>
    <updated>2017-08-01T07:20:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>FY7N2-6RGD2-081XZ-UYWQC-ZPKCA</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;FY7N2-6RGD2-081XZ-UYWQC-ZPKCA&lt;/p&gt;

    
    </summary>
    
      <category term="Tools" scheme="http://pzhen.github.io/categories/Tools/"/>
    
    
      <category term="Tools" scheme="http://pzhen.github.io/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>Tools-Win8.1专业版秘钥</title>
    <link href="http://pzhen.github.io/2017/08/01/Tools-Window8-1%E4%B8%93%E4%B8%9A%E7%89%88%E6%9C%AC%E7%A7%98%E9%92%A5/"/>
    <id>http://pzhen.github.io/2017/08/01/Tools-Window8-1专业版本秘钥/</id>
    <published>2017-08-01T07:17:27.000Z</published>
    <updated>2017-08-01T07:18:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>XHQ8N  C3MCJ  RQXB6   WCHYG   C9WKB</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;XHQ8N  C3MCJ  RQXB6   WCHYG   C9WKB&lt;/p&gt;

    
    </summary>
    
      <category term="Tools" scheme="http://pzhen.github.io/categories/Tools/"/>
    
    
      <category term="Tools" scheme="http://pzhen.github.io/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>Tools-XP注册码</title>
    <link href="http://pzhen.github.io/2017/08/01/Tools-XP%E6%B3%A8%E5%86%8C%E7%A0%81/"/>
    <id>http://pzhen.github.io/2017/08/01/Tools-XP注册码/</id>
    <published>2017-08-01T07:14:25.000Z</published>
    <updated>2017-08-01T07:14:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>QC986-27D34-6M3TY-JJXP9-TBGMD<br>CM3HY-26VYW-6JRYC-X66GX-JVY2D<br>DP7CM-PD6MC-6BKXT-M8JJ6-RPXGJ<br>F4297-RCWJP-P482C-YY23Y-XH8W3<br>HH7VV-6P3G9-82TWK-QKJJ3-MXR96<br>HCQ9D-TVCWX-X9QRG-J4B2Y-GR2TT<br>M6TF9-8XQ2M-YQK9F-7TBB2-XGG88<br>DG8FV-B9TKY-FRT9J-6CRCC-XPQ4G</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;QC986-27D34-6M3TY-JJXP9-TBGMD&lt;br&gt;CM3HY-26VYW-6JRYC-X66GX-JVY2D&lt;br&gt;DP7CM-PD6MC-6BKXT-M8JJ6-RPXGJ&lt;br&gt;F4297-RCWJP-P482C-YY23Y-XH8W3&lt;br&gt;HH7VV
    
    </summary>
    
      <category term="Tools" scheme="http://pzhen.github.io/categories/Tools/"/>
    
    
      <category term="Tools" scheme="http://pzhen.github.io/tags/Tools/"/>
    
      <category term="注册码" scheme="http://pzhen.github.io/tags/%E6%B3%A8%E5%86%8C%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Funny-书生拿着书在打瞌睡</title>
    <link href="http://pzhen.github.io/2017/08/01/Funny-%E4%B9%A6%E7%94%9F%E6%8B%BF%E7%9D%80%E4%B9%A6%E5%9C%A8%E6%89%93%E7%9E%8C%E7%9D%A1/"/>
    <id>http://pzhen.github.io/2017/08/01/Funny-书生拿着书在打瞌睡/</id>
    <published>2017-08-01T07:08:03.000Z</published>
    <updated>2017-08-01T07:09:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>书生拿着书在打瞌睡。<br>欣赏他的人说，你瞧，他多用功，睡着了还拿着书。<br><a id="more"></a><br>不欣赏他的人说，你瞧，他多懒惰，一拿着书就睡着了。<br>看的人不同了，书生就不是那个书生了。<br>你爱他的时候，他的缺点都是优点，你不爱他了，他的优点也成了缺点。<br>看的眼光不同了，他就不是他了。<br>和一个人牵手的时候，就以为会是一生一世的相守。等到隔着太长的一段心路望回来，才惊讶地发现，虽然彼此都那么熟悉地活在彼此身边，却连相互述说的欲望都已经没有。是的，冷眼旁观着，彼此都在不知不觉中成了河川。而河川，永远都只会觉得是对方这座桥在走。<br>     一则佛教故事。<br>从前有个书生, 和未婚妻约好在某年某月某日结婚。到那一天，未婚妻却嫁给了别人。书生受此打击, 一病不起。这时, 路过一游方僧人，从怀里摸出一面镜子叫书生看……<br>书生看到茫茫大海，一名遇害的女子一丝不挂地躺在海滩上。路过一人, 看一眼，摇摇头, 走了。又路过一人, 将衣服脱下,给女尸盖上, 走了。再路过一人,过去, 挖个坑, 小心翼翼把尸体掩埋了。<br>僧人解释道, 那具海滩上的女尸，就是你未婚妻的前世。你是第二个路过的人，曾给过他一件衣服，她今生和你相恋, 只为还你一个情。但是她最终要报答一生一世的人, 是最后那个把她掩埋的人, 那人就是他现在的丈夫。<br>书生大悟。</p>
<p>前世，究竟是谁埋了你？<br>金岳霖找到了林徽因。他用一生的孤独来回报林徽因这位前世埋了他的人。<br>徐志摩找到了谁？“我将于茫茫人海中访我唯一灵魂的伴侣，得之，我幸；不得，我命。如此而已。”这是他在追求陆小曼时说的话。他轻轻地从林徽因的身边走了，正如他轻轻地 来，他轻轻地挥手，没有带走林身边的一朵云彩。为了满足陆奢靡的生活，他频繁的往来于南北授课，在碧蓝的天空中，他把他34岁的生命回报给了前世埋他的陆小曼。<br>人们从奈何桥上匆匆走过。<br>孟婆说：“行路的人，喝碗孟婆汤解解渴。”口渴的人心急地喝了。于是，那个前世埋他们的人，在他们头脑中渐渐模糊了。他们开始惊惶地四处张望，妄图在茫茫 人海中寻找今生的爱人。“众里寻它千百度，蓦然回首，那人却在灯火阑珊处。”其实，你携起他的手时，就是前世残存的记忆在提醒你了，前世埋你的人，就是你 身边与你相濡以沫的爱人啊。<br>     欣赏那个打瞌睡的书生吧。他真的很用功，你瞧，他睡着了还拿着书呢。<br>月光下的大海，泛着粼粼的波。<br>朋友说，思涵，和你的爱人去看看月光下的大海吧，在大海的最深处，也许就藏着你前生的记忆呢。<br>我在屏幕前轻轻的笑了。三生石上的旧精魂，真的不是一个美丽的传说么？与前世埋过我的爱人，携手在银色的沙滩，那该是今生最完美的一种幸福了吧。<br>我从奈何桥上走过，孟婆说：“行路的人，喝碗孟婆汤解解渴。”不，不不，我不喝，我宁愿在忘川河边忍受水淹火炙的磨折，我也一定要记得，前世，是谁埋的我……<br>     前世，究竟是谁埋了我…… </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;书生拿着书在打瞌睡。&lt;br&gt;欣赏他的人说，你瞧，他多用功，睡着了还拿着书。&lt;br&gt;
    
    </summary>
    
      <category term="Funny" scheme="http://pzhen.github.io/categories/Funny/"/>
    
    
      <category term="Funny" scheme="http://pzhen.github.io/tags/Funny/"/>
    
  </entry>
  
  <entry>
    <title>Arithmetic-一致性Hash</title>
    <link href="http://pzhen.github.io/2017/08/01/Arithmetic-%E4%B8%80%E8%87%B4%E6%80%A7Hash/"/>
    <id>http://pzhen.github.io/2017/08/01/Arithmetic-一致性Hash/</id>
    <published>2017-08-01T06:43:30.000Z</published>
    <updated>2017-08-01T06:52:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>一致性哈希算法在1997年由麻省理工学院提出的一种分布式哈希（DHT）实现算法，设计目标是为了解决因特网中的热点(Hot spot)问题，初衷和CARP十分类似。一致性哈希修正了CARP使用的简 单哈希算法带来的问题，使得分布式哈希（DHT）可以在P2P环境中真正得到应用。 </p>
<p>一致性hash算法提出了在动态变化的Cache环境中，判定哈希算法好坏的四个定义：</p>
<ul>
<li>1、平衡性(Balance)：平衡性是指哈希的结果能够尽可能分布到所有的缓冲中去，这样可以使得所有的缓冲空间都得到利用。很多哈希算法都能够满足这一条件。</li>
<li>2、单调性(Monotonicity)：单调性是指如果已经有一些内容通过哈希分派到了相应的缓冲中，又有新的缓冲加入到系统中。哈希的结果应能够保证原有已分配的内容可以被映射到原有的或者新的缓冲中去，而不会被映射到旧的缓冲集合中的其他缓冲区。 </li>
<li>3、分散性(Spread)：在分布式环境中，终端有可能看不到所有的缓冲，而是只能看到其中的一部分。当终端希望通过哈希过程将内容映射到缓冲上时，由于不同终端所见的缓冲范围有可能不同，从而导致哈希的结果不一致，最终的结果是相同的内容被不同的终端映射到不同的缓冲区中。这种情况显然是应该避免的，因为它导致相同内容被存储到不同缓冲中去，降低了系统存储的效率。分散性的定义就是上述情况发生的严重程度。好的哈希算法应能够尽量避免不一致的情况发生，也就是尽量降低分散性。 </li>
<li>4、负载(Load)：负载问题实际上是从另一个角度看待分散性问题。既然不同的终端可能将相同的内容映射到不同的缓冲区中，那么对于一个特定的缓冲区而言，也可能被不同的用户映射为不同 的内容。与分散性一样，这种情况也是应当避免的，因此好的哈希算法应能够尽量降低缓冲的负荷。</li>
</ul>
<p>在分布式集群中，对机器的添加删除，或者机器故障后自动脱离集群这些操作是分布式集群管理最基本的功能。如果采用常用的hash(object)%N算法，那么在有机器添加或者删除后，很多原有的数据就无法找到了，这样严重的违反了单调性原则。接下来主要讲解一下一致性哈希算法是如何设计的：</p>
<h3 id="环形Hash空间"><a href="#环形Hash空间" class="headerlink" title="环形Hash空间"></a>环形Hash空间</h3><p>按照常用的hash算法来将对应的key哈希到一个具有2^32次方个桶的空间中，即0~(2^32)-1的数字空间中。现在我们可以将这些数字头尾相连，想象成一个闭合的环形。如下图<br><img src="20140411000507734.png" alt=""></p>
<h3 id="把数据通过一定的hash算法处理后映射到环上"><a href="#把数据通过一定的hash算法处理后映射到环上" class="headerlink" title="把数据通过一定的hash算法处理后映射到环上"></a>把数据通过一定的hash算法处理后映射到环上</h3><p>现在我们将object1、object2、object3、object4四个对象通过特定的Hash函数计算出对应的key值，然后散列到Hash环上。如下图：</p>
<pre><code>Hash(object1) = key1；
Hash(object2) = key2；
Hash(object3) = key3；
Hash(object4) = key4；
</code></pre><p><img src="20140411000620656.png" alt=""></p>
<h3 id="将机器通过hash算法映射到环上"><a href="#将机器通过hash算法映射到环上" class="headerlink" title="将机器通过hash算法映射到环上"></a>将机器通过hash算法映射到环上</h3><p>在采用一致性哈希算法的分布式集群中将新的机器加入，其原理是通过使用与对象存储一样的Hash算法将机器也映射到环中（一般情况下对机器的hash计算是采用机器的IP或者机器唯一的别名作为输入值），然后以顺时针的方向计算，将所有对象存储到离自己最近的机器中。<br>假设现在有NODE1，NODE2，NODE3三台机器，通过Hash算法得到对应的KEY值，映射到环中，其示意图如下：</p>
<pre><code>Hash(NODE1) = KEY1;
Hash(NODE2) = KEY2;
Hash(NODE3) = KEY3;
</code></pre><p><img src="20140411000853609.png" alt=""></p>
<p>通过上图可以看出对象与机器处于同一哈希空间中，这样按顺时针转动object1存储到了NODE1中，object3存储到了NODE2中，object2、object4存储到了NODE3中。在这样的部署环境中，hash环是不会变更的，因此，通过算出对象的hash值就能快速的定位到对应的机器中，这样就能找到对象真正的存储位置了。</p>
<h3 id="机器的删除与添加"><a href="#机器的删除与添加" class="headerlink" title="机器的删除与添加"></a>机器的删除与添加</h3><p>普通hash求余算法最为不妥的地方就是在有机器的添加或者删除之后会照成大量的对象存储位置失效，这样就大大的不满足单调性了。下面来分析一下一致性哈希算法是如何处理的。</p>
<h4 id="1-节点（机器）的删除"><a href="#1-节点（机器）的删除" class="headerlink" title="1. 节点（机器）的删除"></a>1. 节点（机器）的删除</h4><p>以上面的分布为例，如果NODE2出现故障被删除了，那么按照顺时针迁移的方法，object3将会被迁移到NODE3中，这样仅仅是object3的映射位置发生了变化，其它的对象没有任何的改动。如下图：<br><img src="20140411001033656.png" alt=""></p>
<h4 id="2-节点（机器）的添加"><a href="#2-节点（机器）的添加" class="headerlink" title="2. 节点（机器）的添加"></a>2. 节点（机器）的添加</h4><p>如果往集群中添加一个新的节点NODE4，通过对应的哈希算法得到KEY4，并映射到环中，如下图：<br><img src="20140411001211062.png" alt="">    </p>
<p>通过按顺时针迁移的规则，那么object2被迁移到了NODE4中，其它对象还保持这原有的存储位置。通过对节点的添加和删除的分析，一致性哈希算法在保持了单调性的同时，还是数据的迁移达到了最小，这样的算法对分布式集群来说是非常合适的，避免了大量数据迁移，减小了服务器的的压力。</p>
<h3 id="平衡性"><a href="#平衡性" class="headerlink" title="平衡性"></a>平衡性</h3><p>根据上面的图解分析，一致性哈希算法满足了单调性和负载均衡的特性以及一般hash算法的分散性，但这还并不能当做其被广泛应用的原由，因为还缺少了平衡性。下面将分析一致性哈希算法是如何满足平衡性的。hash算法是不保证平衡的，如上面只部署了NODE1和NODE3的情况（NODE2被删除的图），object1存储到了NODE1中，而object2、object3、object4都存储到了NODE3中，这样就照成了非常不平衡的状态。在一致性哈希算法中，为了尽可能的满足平衡性，其引入了虚拟节点。<br>——“虚拟节点”（ virtual node ）是实际节点（机器）在 hash 空间的复制品（ replica ），一实际个节点（机器）对应了若干个“虚拟节点”，这个对应个数也成为“复制个数”，“虚拟节点”在 hash 空间中以hash值排列。<br>以上面只部署了NODE1和NODE3的情况（NODE2被删除的图）为例，之前的对象在机器上的分布很不均衡，现在我们以2个副本（复制个数）为例，这样整个hash环中就存在了4个虚拟节点，最后对象映射的关系图如下：</p>
<p><img src="20140411001433375.png" alt=""><br>根据上图可知对象的映射关系：object1-&gt;NODE1-1，object2-&gt;NODE1-2，object3-&gt;NODE3-2，object4-&gt;NODE3-1。通过虚拟节点的引入，对象的分布就比较均衡了。那么在实际操作中，正真的对象查询是如何工作的呢？对象从hash到虚拟节点到实际节点的转换如下图：<br><img src="20140411001540656.png" alt=""><br>“虚拟节点”的hash计算可以采用对应节点的IP地址加数字后缀的方式。例如假设NODE1的IP地址为192.168.1.100。引入“虚拟节点”前，计算 cache A 的 hash 值：<br>Hash(“192.168.1.100”);<br>引入“虚拟节点”后，计算“虚拟节”点NODE1-1和NODE1-2的hash值：<br>Hash(“192.168.1.100#1”); // NODE1-1<br>Hash(“192.168.1.100#2”); // NODE1-2</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一致性哈希算法在1997年由麻省理工学院提出的一种分布式哈希（DHT）实现算法，设计目标是为了解决因特网中的热点(Hot spot)问题，初衷和CARP十分类似。一致性哈希修正了CARP使用的简 单哈希算法带来的问题，使得分布式哈希（DHT）可以在P2P环境中真正得到应用。
    
    </summary>
    
      <category term="Arithmetic" scheme="http://pzhen.github.io/categories/Arithmetic/"/>
    
    
      <category term="Arithmetic" scheme="http://pzhen.github.io/tags/Arithmetic/"/>
    
  </entry>
  
</feed>
